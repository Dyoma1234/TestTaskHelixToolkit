<Window x:Class="Test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:h="http://helix-toolkit.org/wpf"
        xmlns:local="clr-namespace:Test"
        mc:Ignorable="d"
        Title="MainWindow" BorderThickness="1" Height="450" Width="800" 
        BorderBrush="#FF9FCDF3"
        Background="White" MinWidth="800" MinHeight="450" WindowStyle="None">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="convecter"></BooleanToVisibilityConverter>
    </Window.Resources>
    <Grid>
        <Grid  VerticalAlignment="Top" Height="28" MouseLeftButtonDown="Title_MouseLeftButtonDown">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF819EFF" Offset="0"/>
                    <GradientStop Color="#FFBDEDFF" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Foreground="White" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Tekton Pro Ext" Margin="15,2,15,0">Main window</Label>
            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                <Button Click="Button_Click_2" Width="24" BorderBrush="{x:Null}">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF819EFF" Offset="0"/>
                            <GradientStop Color="#FFBDEDFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFDDDDDD"/>
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Canvas  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_minus" Width="24" Height="24" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0" VerticalAlignment="Bottom">
                        <Path Width="18" Height="3" Canvas.Left="3"   Stretch="Fill" Fill="White" Data="M20,14H4V10H20"  Canvas.Top="16"/>
                    </Canvas>
                </Button>
                <Button Width="24" Click="Button_Click_1" BorderBrush="{x:Null}">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF819EFF" Offset="0"/>
                            <GradientStop Color="#FFBDEDFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFDDDDDD"/>
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_window_minimize" Width="24" Height="24" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path x:Name="IconMin"  Width="18" Height="18" Canvas.Left="3" Canvas.Top="3" Stretch="Fill" Fill="White" Data="M4,4H20V20H4V4M6,8V18H18V8H6Z"/>
                    </Canvas>
                </Button>
                <Button Width="24" FontSize="16" Click="Button_Click" BorderBrush="{x:Null}">
                    <Button.Style>

                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF819EFF" Offset="0"/>
                                        <GradientStop Color="#FFBDEDFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  Width="24" Height="24" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path Height="24" Width="24" Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z" Fill="White" />
                    </Canvas>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Margin="0,28,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*" />
                <ColumnDefinition/>

            </Grid.ColumnDefinitions>
            <Border BorderBrush="#FFBDEDFF" BorderThickness="0,0,3,0">
                <Grid>
                    <ListBox SelectedItem="{Binding SelectedTask,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Tasks, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" FontSize="16" FontWeight="Bold" Background="{x:Null}">
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                                        <Condition Property="IsSelected"
                                            Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#FFF9C6FF" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                                        <Condition Property="IsSelected"
                                            Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="#FFF9C6FF" />
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
      
                                <DataTemplate>
                                <Grid Width="auto"  Height="40">
                                    <TextBlock  Text="{Binding}" VerticalAlignment="Stretch"></TextBlock>
                                </Grid>
                            </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                </Grid>
            </Border>
            <Grid Grid.Column="1" Grid.ColumnSpan="2" Margin="0,0,0.4,0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0.2*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="601*"/>
                        <ColumnDefinition Width="13*"/>
                    </Grid.ColumnDefinitions>
                    <h:HelixViewport3D  Grid.ColumnSpan="2" >
                        <h:DefaultLights/>
                        <h:VectorFieldVisual3D  x:Name="qwe" HeadLength="500"  >
                           
                        </h:VectorFieldVisual3D>
                        <h:BoundingBoxVisual3D x:Name="abc"  Content="{Binding BoundingModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BoundingBox="{Binding BoundingModel.Bounds, UpdateSourceTrigger=PropertyChanged}" Fill="Gray"/>
                        <h:LinesVisual3D  Content="{Binding BoundingModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></h:LinesVisual3D>
                        <ModelVisual3D  Content="{Binding MyModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  x:Name="foo"/>
                            
                       
                    </h:HelixViewport3D>
                </Grid>
                <Border  Grid.Row="1" BorderBrush="#FFBDEDFF" BorderThickness="0,3,0,0" Padding="0" Margin="15,0">
                    <Grid>
                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Left">
                            <Button Command="{Binding OpenCommand}" Height="30" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" FontWeight="Bold" FontSize="16" BorderBrush="Black" Background="{x:Null}" Foreground="Black">Load</Button>
                            <Button Command="{Binding ClearCommand}" Height="30" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" FontWeight="Bold" FontSize="16" BorderBrush="Black" Background="{x:Null}">Clear</Button>
                         </StackPanel>
                        <StackPanel Visibility="{Binding Task5Vis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource convecter}}" Orientation="Horizontal" HorizontalAlignment="Right">
                            <StackPanel Margin="15,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Label>MIN Z</Label>
                                <Label>MAX Z</Label>
                            </StackPanel>
                            <StackPanel Margin="15,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Slider Value="{Binding MinValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="150" Minimum="-25" Maximum="-5" SmallChange="1" TickPlacement="Both" AutoToolTipPlacement="TopLeft"/>
                                <Slider Value="{Binding MaxValue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="150" Maximum="25" Minimum="5" SmallChange="1" TickPlacement="Both" AutoToolTipPlacement="BottomRight" />
                            </StackPanel>
                            <Button Command="{Binding StartCommand}" Height="30" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" FontWeight="Bold" FontSize="16" BorderBrush="Black" Background="{x:Null}">Start</Button>
                            <Button Command="{Binding StopCommand}" Height="30" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" FontWeight="Bold" FontSize="16" BorderBrush="Black" Background="{x:Null}">Stop</Button>

                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Window>
